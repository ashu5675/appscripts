function onOpen() {
  let ui = SpreadsheetApp.getUi();
  ui.createMenu('AzureDevOps')
    .addItem('AddAccessToken', 'AddAccessToken')
    .addItem('AddAreaPath', 'AddAreaPath')
    .addItem('publishBulk', 'publishBulk')
    .addItem('createADO','createADO')
    .addItem('publishRow','publishRow')
    .addItem('getADOdetails','getADOdetails')
    .addToUi();
}



function AddAccessToken() {
  var ui = SpreadsheetApp.getUi();
  doc_name = ui.prompt('Enter your access Token from ADO');
  var accessID = Utilities.base64Encode("hello:"+doc_name.getResponseText());
  doc_name = ui.prompt('Enter your o9 email ID');
  var email = doc_name.getResponseText();
  Logger.log(email)
  Logger.log(accessID)
  PropertiesService.getUserProperties().setProperty(email, accessID);
}

function AddAreaPath() {
  var ui = SpreadsheetApp.getUi();
  area_path = ui.prompt('Enter your Area Path');
  var area_path = area_path.getResponseText();
  var sheetname = SpreadsheetApp.getActiveSpreadsheet().getName();
  PropertiesService.getDocumentProperties().setProperty(sheetname, area_path);
}

function atEdit(e) {
  var email = Session.getActiveUser().getEmail();
  var token = PropertiesService.getUserProperties().getProperty(email);
  Logger.log(email)
  Logger.log(token)
  if (e.range.getColumn() == 1){
    getADOdetails(token)
  }
  if (e.range.getColumn() == 3){
    createADO(token)
  }
}

function publishBulk(){
  var token = PropertiesService.getUserProperties().getProperty(email);
  var lastRow = SpreadsheetApp.getActiveSheet().getLastRow();
  for(var i = lastRow; i >=6; i--){
    publish(i, token)
  }
}

function getADOdetails(token){
  var activeSheet = SpreadsheetApp.getActiveSheet();
  var activeCell = SpreadsheetApp.getActiveSheet().getActiveCell();
  var id = activeCell.getDisplayValue();
  var url = "https://dev.azure.com/o9git/CoreDev/_apis/wit/workitems/"+id+"?api-version=6.0";
  var options = {
    "method": "get",
    "headers": {
      "Authorization": "Basic "+token,
      "Accept": "application/json",
    },
    "contentType": "application/json"
  }
Logger.log(options);
  var response = UrlFetchApp.fetch(url, options);
  var data = JSON.parse(response.getContentText());
  
  try {
    var State = data.fields['System.State'];
    var WorkItemType = data.fields['System.WorkItemType'];
    var AssignedTo = data.fields['System.AssignedTo']['displayName'];
    var IterationPath = data.fields['System.IterationPath'];
    var Title = data.fields['System.Title'];
    activeSheet.getRange(activeCell.getRow(), activeCell.getColumn()+1,1,5).setValues([[WorkItemType, Title, AssignedTo, State, IterationPath]]);
    } catch(error) {
      Logger.log(error);
    }
}

function createADO(token){
  var activeSheet = SpreadsheetApp.getActiveSheet();
  var activeCell = SpreadsheetApp.getActiveSheet().getActiveCell();
  var sheetname = SpreadsheetApp.getActiveSpreadsheet().getName();
  var areaPath = PropertiesService.getDocumentProperties().getProperty(sheetname);
  var raw = JSON.stringify([
    {
      "op": "add",
      "path": "/fields/System.Title",
      "from": null,
      "value": SpreadsheetApp.getActiveSheet().getActiveCell().getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.AssignedTo",
      "value": SpreadsheetApp.getCurrentCell().getNextDataCell(SpreadsheetApp.Direction.NEXT).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.AreaPath",
      "value": areaPath
    },
    
    ]);

  var requestOptions = {
    'method': 'POST',
    'headers': {
      "Authorization": "Basic "+token,
      "Accept": "application/json-patch+json",
    },
    'payload': raw,
    "contentType": "application/json-patch+json",
    'muteHttpExceptions': true,
  };
  var type = activeSheet.getRange(activeCell.getRow(), activeCell.getColumn()-1,1,1).getDisplayValue();
  Logger.log(requestOptions)
  var response = UrlFetchApp.fetch("https://dev.azure.com/o9git/CoreDev/_apis/wit/workitems/?type="+type+"&api-version=6.0", requestOptions);
  Logger.log(response)
  var output = JSON.parse(response.getContentText());
  activeSheet.getRange(activeCell.getRow(), activeCell.getColumn()-2,1,1).setValue(output.id);
  activeSheet.getRange(activeCell.getRow(), activeCell.getColumn()+2,1,1).setValue(output.fields['System.State']);
  activeSheet.getRange(activeCell.getRow(), activeCell.getColumn()+3,1,1).setValue(output.fields['System.IterationPath']);

}



function publishRow(){
  var email = Session.getActiveUser().getEmail();
  var token = PropertiesService.getUserProperties().getProperty(email);
  var activeSheet = SpreadsheetApp.getActiveSheet();
  var activeCell = SpreadsheetApp.getActiveSheet().getActiveCell();
  
  var raw = JSON.stringify([
    {
      "op": "add",
      "path": "/fields/System.WorkItemType",
      "value": activeSheet.getRange(activeCell.getRow(),2,1,1).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.Title",
      "from": null,
      "value": activeSheet.getRange(activeCell.getRow(),3,1,1).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.AssignedTo",
      "value": activeSheet.getRange(activeCell.getRow(),4,1,1).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.State",
      "value": activeSheet.getRange(activeCell.getRow(),5,1,1).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.IterationPath",
      "value": activeSheet.getRange(activeCell.getRow(),6,1,1).getDisplayValue()
    }
    ]);

  var requestOptions = {
    'method': 'PATCH',
    'headers': {
      "Authorization": "Basic "+token,
      "Accept": "application/json-patch+json",
    },
    'payload': raw,
    "contentType": "application/json-patch+json",
  };
  var id = activeSheet.getRange(activeCell.getRow(),1,1,1).getDisplayValue();
  Logger.log(id)
  Logger.log(requestOptions)
  var response = UrlFetchApp.fetch("https://dev.azure.com/o9git/CoreDev/_apis/wit/workitems/"+id+"?api-version=6.0", requestOptions);
  Logger.log(response)
  var output = JSON.parse(response.getContentText());
  
}

function publish(i){
  var activeSheet = SpreadsheetApp.getActiveSheet();
  var email = Session.getActiveUser().getEmail();
  var token = PropertiesService.getUserProperties().getProperty(email);
  var raw = JSON.stringify([
    {
      "op": "add",
      "path": "/fields/System.WorkItemType",
      "value": activeSheet.getRange(i,2,1,1).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.Title",
      "from": null,
      "value": activeSheet.getRange(i,3,1,1).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.AssignedTo",
      "value": activeSheet.getRange(i,4,1,1).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.State",
      "value": activeSheet.getRange(i,5,1,1).getDisplayValue()
    },
    {
      "op": "add",
      "path": "/fields/System.IterationPath",
      "value": activeSheet.getRange(i,6,1,1).getDisplayValue()
    }
    ]);

  var requestOptions = {
    'method': 'PATCH',
    'headers': {
      "Authorization": "Basic "+token,
      "Accept": "application/json-patch+json",
    },
    'payload': raw,
    "contentType": "application/json-patch+json",
    'muteHttpExceptions': true,
  };
  var id = activeSheet.getRange(i,1,1,1).getDisplayValue();
  Logger.log(id)
  Logger.log(requestOptions.payload)
  var response = UrlFetchApp.fetch("https://dev.azure.com/o9git/CoreDev/_apis/wit/workitems/"+id+"?api-version=6.0", requestOptions);
  Logger.log(response)
  var output = JSON.parse(response.getContentText());
  
}



/*
function SyncADO() {
  var url = 'https://dev.azure.com/o9git/CoreDev/Advanced Analytics/_apis/wit/wiql/487742f0-c8c3-4360-9ece-6c0ed160d80d?api-version=6.0';
  var options = {
    "method": "get",
    "headers": {
      "Authorization": "Basic aGVsbG86N3hhbXVlbGF3bjV3cGNjMnltaWU2NXBmcW12emtneHNrd2tkc3poa3J1ZGl3NmVrY3R4cQ==",
      "Accept": "application/json",
    },
    "contentType": "application/json"
  }
  var response = UrlFetchApp.fetch(url, options);
  var data = JSON.parse(response.getContentText());
  Logger.log(data.workItems.length);
  for(var i = data.workItems.length - 1; i >=0; i--){
    var ADOlink = data.workItems[i].url;
    var ADOid = data.workItems[i].id;
    getADO(ADOlink,ADOid)
  }
}


function getADO(ADOlink,ADOid){

//Modify for Daily Sync
  var url = ADOlink
  var options = {
    "method": "get",
    "headers": {
      "Authorization": "Basic aGVsbG86N3hhbXVlbGF3bjV3cGNjMnltaWU2NXBmcW12emtneHNrd2tkc3poa3J1ZGl3NmVrY3R4cQ==",
      "Accept": "application/json",
    },
    "contentType": "application/json"
  }

  var response = UrlFetchApp.fetch(url, options);
  var data = JSON.parse(response.getContentText());
  try {
    var ID = data.id;
    var State = data.fields['System.State'];
    var WorkItemType = data.fields['System.WorkItemType'];
    var AssignedTo = data.fields['System.AssignedTo']['displayName'];
    var IterationPath = data.fields['System.IterationPath'];
    var Title = data.fields['System.Title'];


    var rng = SpreadsheetApp.getActiveSheet().getRange('A:A');
    var textfinder = rng.createTextFinder(ID);
    if (textfinder.findAll().length == 0) {
      var activeSheet = SpreadsheetApp.getActiveSpreadsheet().getActiveSheet();
      activeSheet.appendRow([ID, WorkItemType, Title, AssignedTo, State, IterationPath]);
     }
    } catch(error) {
      Logger.log(error);
    }
}
*/
